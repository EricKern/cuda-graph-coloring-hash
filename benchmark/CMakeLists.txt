set(coop_comp coop_comp.out)
add_executable(${coop_comp} coop_comp.cu)
target_compile_options(${coop_comp} PRIVATE "$<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CUDA>>:-Xptxas;-v;-lineinfo;>")
target_include_directories(${coop_comp} PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/benchmark)
target_link_libraries(${coop_comp} PRIVATE tiling cpumultiply nvbench::nvbench)
set_target_properties(${coop_comp} PROPERTIES COMPILE_FEATURES cuda_std_17)

set(cpy_bench cpy_bench.out)
add_executable(${cpy_bench} cpy_bench.cu)
target_compile_options(${cpy_bench} PRIVATE "$<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CUDA>>:-Xptxas;-v;-lineinfo;>")
target_include_directories(${cpy_bench} PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/benchmark)
target_link_libraries(${cpy_bench} PRIVATE tiling cpumultiply nvbench::nvbench cusparse)
set_target_properties(${cpy_bench} PROPERTIES COMPILE_FEATURES cuda_std_17)

set(d1_d2_Coop d1_d2_Coop.out)
add_executable(${d1_d2_Coop} d1_d2_Coop.cu)
target_compile_options(${d1_d2_Coop} PRIVATE "$<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CUDA>>:-Xptxas;-v;-lineinfo;>")
target_include_directories(${d1_d2_Coop} PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/benchmark)
target_link_libraries(${d1_d2_Coop} PRIVATE nvbench::nvbench tiling cpumultiply)
set_target_properties(${d1_d2_Coop} PROPERTIES COMPILE_FEATURES cuda_std_17)

set(d1_opt_kernels d1_opt_kernels.out)
add_executable(${d1_opt_kernels} d1_opt_kernels.cu)
target_compile_options(${d1_opt_kernels} PRIVATE "$<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CUDA>>:-Xptxas;-v;-lineinfo;>")
target_include_directories(${d1_opt_kernels} PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/benchmark)
target_link_libraries(${d1_opt_kernels} PRIVATE nvbench::nvbench tiling cpumultiply)
set_target_properties(${d1_opt_kernels} PROPERTIES COMPILE_FEATURES cuda_std_17)

set(d2_bench d2_bench.out)
add_executable(${d2_bench} d2_bench.cu)
target_compile_options(${d2_bench} PRIVATE "$<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CUDA>>:-Xptxas;-v;-lineinfo;>")
target_include_directories(${d2_bench} PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/benchmark)
target_link_libraries(${d2_bench} PRIVATE nvbench::nvbench tiling cpumultiply)
set_target_properties(${d2_bench} PROPERTIES COMPILE_FEATURES cuda_std_17)

set(tail tail.out)
add_executable(${tail} tail.cu)
target_compile_options(${tail} PRIVATE "$<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CUDA>>:-Xptxas;-v;-lineinfo;>")
target_include_directories(${tail} PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/benchmark)
target_link_libraries(${tail} PRIVATE nvbench::nvbench tiling cpumultiply)
set_target_properties(${tail} PROPERTIES COMPILE_FEATURES cuda_std_17)

set(warp_version warp_versions_time_bench.out)
add_executable(${warp_version} warp_versions_time_bench.cu)
target_compile_options(${warp_version} PRIVATE "$<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CUDA>>:-Xptxas;-v;-lineinfo;>")
target_include_directories(${warp_version} PRIVATE ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/benchmark)
target_link_libraries(${warp_version} PRIVATE nvbench::nvbench tiling cpumultiply)
set_target_properties(${warp_version} PROPERTIES COMPILE_FEATURES cuda_std_17)